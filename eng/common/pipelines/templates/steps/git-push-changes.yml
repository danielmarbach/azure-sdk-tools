steps:
- pwsh: |
    git clone https://$(azuresdk-github-pat)@github.com/Azure/azure-docs-sdk-java.git $(System.DefaultWorkingDirectory)/repo

    try {
      Push-Location $(System.DefaultWorkingDirectory)/repo

      Write-Host "git checkout master"
      git checkout master
    } finally {
      Pop-Location
    }
  displayName: Clone Documentation Repository
  ignoreLASTEXITCODE: false
- pwsh: |
    (Get-Content "$(System.DefaultWorkingDirectory)/repo/README.md" | Out-String) -replace "`n", "`r`n" | Out-File "$(System.DefaultWorkingDirectory)/repo/README.md"
    
    echo "git add -A"
    git add -A

    echo "git diff --name-status --cached --exit-code"
    git diff --name-status --cached --exit-code

    if ($LastExitCode -ne 0) {
      echo "##vso[task.setvariable variable=HasChanges]$true"
      echo "Changes detected so setting HasChanges=true"
    }
    else {
      echo "##vso[task.setvariable variable=HasChanges]$false"
      echo "No changes so skipping code push"
    }
  displayName: Check for changes
  condition: succeeded()
  workingDirectory: "$(System.DefaultWorkingDirectory)/repo"
  ignoreLASTEXITCODE: true

- pwsh: |
    # Remove the repo owner from the front of the repo name if it exists there
    $repoName = "azure-docs-sdk-java" -replace "^$Azure/", ""
    echo "##vso[task.setvariable variable=RepoNameWithoutOwner]$repoName"
    echo "RepoName = $repoName"
  displayName: Remove Repo Owner from Repo Name
  condition: succeeded()
  workingDirectory: "$(System.DefaultWorkingDirectory)"

- task: PowerShell@2
  displayName: Push changes
  condition: and(succeeded(), eq(variables['HasChanges'], 'true'))
  inputs:
    pwsh: true
    workingDirectory: "$(System.DefaultWorkingDirectory)/repo"
    filePath: eng/common/scripts/git-branch-push.ps1
    arguments: >
      -PRBranchName "a-test-branch"
      -CommitMsg "This is only tests"
      -GitUrl "https://$(azuresdk-github-pat)@github.com/Azure/$(RepoNameWithoutOwner).git"
      -PushArgs "-f"
      -SkipCommit $false
      -RemoteName "origin"
